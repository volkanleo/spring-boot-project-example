name: Maven Dependency Updates

on:
  pull_request:
    types: [opened]

jobs:
  check-dependency-updates:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Install Maven
        run: sudo apt-get install -y maven
      

      - name: Check Dependency Updates
        id: dependency_updates
        run: |
          dependency_updates=$(mvn versions:display-property-updates versions:display-parent-updates -DgenerateBackupPoms=false \
            | grep '\->' \
            | awk -F ' ' '{if ($2 != $4) print $0}')

          if [ -z "$dependency_updates" ]; then
            echo "::set-output name=message::âœ… Congratulations, all your dependency have the latest releases! ðŸ¥³"
          else
            dependency_updates=$(echo "$dependency_updates" | sed -E ':a;N;$!ba;s/\r{0,1}\n/\\n/g')
            countOutdated=$(echo "$dependency_updates" | wc -l)
            echo "::set-output name=message::{'result': 'You have $countOutdated plugins with newer available releases:', 'dependencyUpdates': '$dependency_updates', 'countOutdated': $countOutdated}"

          fi

      - name: Post Comment on PR
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.PR_CHECK }}
          script: |
            const message = {
              body: "${{ steps.dependency_updates.outputs.message }}"
            };

            const request = {
              method: 'POST',
              url: "${{ github.event.pull_request.comments_url }}",
              headers: {
                'Content-Type': 'application/json',
                'Authorization': 'token ${{ secrets.PR_CHECK }}'
              },
              body: JSON.stringify(message)
            };

            await github.request(request);



