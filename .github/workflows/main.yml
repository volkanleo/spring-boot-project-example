name: TEST_VOLKAN

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  check-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check for dependency updates
        run: |
          mvn versions:display-property-updates versions:display-parent-updates -DgenerateBackupPoms=false \
            | grep '\->' \
            | awk -F ' ' '$2 != $4 { print $0 }' > dependency-updates.txt
           
           
      - name: Extract dependency updates
        id: extract
        run: |
          has_updates=$(grep -c "\->" dependency-updates.txt)
          echo "::set-output name=updatess::$has_updates"
          echo "has-updates: $has-updates"
          echo "updatess: $updatess"
          commentBody=$(cat dependency-updates.txt)
          echo "VOLKANN: $commentBody"
      
      - name: Check if dependency-updates.txt is empty
        id: check_empty_file
        run: |
          if [ ! -s dependency-updates.txt ]; then
            echo "Dependency updates file is empty, skipping further steps."
            touch skip-run
          fi

      - name: Comment on pull request (if updates found)
        uses: actions/github-script@v4
        if: steps.check_empty_file.outputs.skip-run != 'true'
        with:
          github-token: ${{ secrets.PR_CHECK }}
          script: |
            const fs = require('fs');
            const updates = fs.readFileSync('dependency-updates.txt', 'utf8');
            const commentBody = `‚ùå WARNING: The following dependencies or microservices have updates available:\n\n${updates}`;
            const { owner, repo, number } = context.issue;
            github.pulls.createReview({
              owner: owner,
              repo: repo,
              pull_number: number,
              body: commentBody
            });
