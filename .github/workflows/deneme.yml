name: DENEME

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  check-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check for dependency updates
        run: |
          mvn versions:display-property-updates versions:display-parent-updates -DgenerateBackupPoms=false \
            | grep '\->' \
            | awk -F ' ' '$2 != $4 { print $0 }' > dependency-updates.txt

      - name: Check if dependency-updates.txt is empty
        id: check_empty_file
        run: |
          if [ ! -s dependency-updates.txt ]; then
            echo "Dependency updates file is empty, skipping further steps."
            touch skip-run
          fi

      - name: Comment on pull request (if updates found)
        if: steps.check_empty_file.outputs.skip-run != 'true'
        run: |
          commentBody=$(cat dependency-updates.txt)
          if [ -n "$commentBody" ]; then
            echo "❌ WARNING: The following dependencies or microservices have updates available:"
            echo "$commentBody"
            echo "::set-output name=comment::$commentBody"
          else
            echo "Dependency updates file is empty, skipping further steps."
            echo "::set-output name=skip-run::true"
          fi

      - name: Comment on pull request (if updates found)
        if: steps.check_empty_file.outputs.skip-run != 'true'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.PR_CHECK }}
          script: |
            const commentBody = '${{ steps.comment.outputs.comment }}';
            if (commentBody) {
              const { owner, repo, number } = context.issue;
              github.pulls.createReview({
                owner: owner,
                repo: repo,
                pull_number: number,
                body: `❌ WARNING: The following dependencies or microservices have updates available:\n\n${commentBody}`
              });
            }
